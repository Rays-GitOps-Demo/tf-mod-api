name: "Validate Terraform"

on:
  pull_request:

permissions:
  id-token: write
  contents: read

jobs:
  terraform:
    name: "Terraform"
    runs-on: ubuntu-latest

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, 
    # or windows-latest.
    defaults:
      run:
        shell: bash

    steps:
      # Configure AWS credentials for the Sandbox account
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::464499752602:role/CI-CD
          aws-region: us-east-1


      # Checkout the repository to the GitHub Actions runner.
      - name: Checkout
        uses: actions/checkout@v3

      # Install the latest version of Terraform CLI
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1

      # Initialize a new or existing Terraform working directory by creating initial files, loading 
      # any remote state, downloading modules, etc.
      - name: Terraform Init
        working-directory: ./terraform
        run: terraform init

      # Check that all Terraform configuration files adhere to a canonical format.
      - name: Terraform Format
        working-directory: ./terraform
        run: terraform fmt -check

      # Check that the Terraform is syntactically correct.
      - name: Terraform Validate
        working-directory: ./terraform
        run: terraform validate

      # Apply the test HCL to a sandbox environment. Destroy afterwards.
      - name: Terraform Apply
        working-directory: ./test
        run: |
          terraform init
          terraform destroy --auto-approve
          terraform apply --auto-approve
          terraform destroy --auto-approve
